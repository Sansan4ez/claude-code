#!/bin/bash
# Proxy management aliases and functions

# –û—á–∏—â–∞–µ–º –ª—é–±—ã–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ aliases –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
unalias proxy-off 2>/dev/null || true
unalias proxy-on 2>/dev/null || true
unalias proxy-toggle 2>/dev/null || true
unalias proxy-status 2>/dev/null || true

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ .env —Ñ–∞–π–ª–∞
load_env() {
    local env_file="/workspace/.env"
    if [ -f "$env_file" ]; then
        # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
        export $(cat "$env_file" | grep -v '^#' | grep -v '^$' | xargs)
        echo "üìÅ Loaded environment variables from .env"
    else
        echo "‚ö†Ô∏è  .env file not found at $env_file"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö proxy
check_proxy_config() {
    # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å .env, –µ—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –Ω–µ—Ç
    if [ -z "$PROXY_SERVER" ] && [ -z "$HTTP_PROXY" ]; then
        echo "üîÑ Attempting to load proxy config from .env..."
        load_env
    fi

    if [ -z "$PROXY_SERVER" ] && [ -z "$HTTP_PROXY" ]; then
        echo "‚ö†Ô∏è  Proxy not configured. Set PROXY_SERVER or HTTP_PROXY environment variable"
        echo "   Example: export PROXY_SERVER='http://user:pass@proxy.company.com:8080'"
        echo "   Or create .env file with PROXY_SERVER=http://user:pass@proxy.company.com:8080"
        return 1
    fi
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è proxy
proxy-off() {
    unset PROXY_SERVER HTTP_PROXY HTTPS_PROXY http_proxy https_proxy NO_PROXY no_proxy
    echo "üî¥ Proxy DISABLED"
}

# –£–º–Ω—ã–π –∞–ª–∏–∞—Å proxy-on —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
proxy-on() {
    if ! check_proxy_config; then
        return 1
    fi

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º PROXY_SERVER –∏–ª–∏ HTTP_PROXY
    local proxy_url="${PROXY_SERVER:-$HTTP_PROXY}"

    export HTTP_PROXY="$proxy_url"
    export HTTPS_PROXY="$proxy_url"
    export http_proxy="$proxy_url"
    export https_proxy="$proxy_url"
    export NO_PROXY="${NO_PROXY:-localhost,127.0.0.1,.local}"
    export no_proxy="${no_proxy:-localhost,127.0.0.1,.local}"

    echo "üü¢ Proxy ENABLED: $proxy_url"
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å proxy
proxy-status() {
    env | grep -i proxy
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
proxy-toggle() {
    if [ -n "$HTTP_PROXY" ]; then
        # Proxy –≤–∫–ª—é—á–µ–Ω - –æ—Ç–∫–ª—é—á–∞–µ–º
        proxy-off
    else
        # Proxy –æ—Ç–∫–ª—é—á–µ–Ω - –≤–∫–ª—é—á–∞–µ–º
        proxy-on
    fi
}

# –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
proxy-test() {
    echo "Testing connection..."
    if curl -I --connect-timeout 5 --max-time 10 https://api.myip.com 2>/dev/null >/dev/null; then
        echo "‚úÖ Connection OK"
        curl --connect-timeout 5 --max-time 10 https://api.myip.com
        echo ""
        if [ -n "$HTTP_PROXY" ]; then
            echo "   Via proxy: $HTTP_PROXY"
        else
            echo "   Direct connection"
        fi
    else
        echo "‚ùå Connection FAILED"
    fi
}

# –ó–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥—ã –±–µ–∑ proxy
no-proxy() {
    env -u HTTP_PROXY -u HTTPS_PROXY -u http_proxy -u https_proxy "$@"
}

# –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é proxy
proxy-config() {
    echo "=== Proxy Configuration ==="
    echo "PROXY_SERVER: ${PROXY_SERVER:-not set}"
    echo "HTTP_PROXY: ${HTTP_PROXY:-not set}"
    echo "HTTPS_PROXY: ${HTTPS_PROXY:-not set}"
    echo "NO_PROXY: ${NO_PROXY:-not set}"
    echo ""
    echo "=== Current Status ==="
    if [ -n "$HTTP_PROXY" ]; then
        echo "üü¢ Proxy is ENABLED: $HTTP_PROXY"
    else
        echo "üî¥ Proxy is DISABLED"
    fi
}

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ .env
proxy-reload() {
    echo "üîÑ Reloading proxy configuration from .env..."
    load_env
    proxy-config
}